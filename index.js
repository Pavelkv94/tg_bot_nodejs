const TelegramApi = require("node-telegram-bot-api");
const schedule = require('node-schedule');
const { gameOptions, againOptions } = require('./options')
const mongoose = require('mongoose');
const runMongo = require("./mongo");
const request = require('request');

let options = {
    url: "https://openweathermap.org/data/2.5/weather?id=625144&appid=439d4b804bc8187953eb36d2a8c26a02",
};
let state = {
    weather: {
        currentTemperature: "",
        weather: ""
    }
}

runMongo()

// await mongoose.connect('mongodb+srv://pavelkv94:157842@clusterfortgbot.hi5sp.mongodb.net/myFirstDatabase?retryWrites=true&w=majority');




function sendTime(time, msg, text) {
    new schedule.scheduleJob({ start: new Date(Date.now() + Number(time) * 1000 * 60), end: new Date(new Date(Date.now() + Number(time) * 1000 * 60 + 1000)), rule: '*/1 * * * * *' }, function () {
        bot.sendMessage(msg.chat.id, text);
        console.log("TIMER")
    });
}


//–Ω–∞—à —Ç–æ–∫–µ–Ω
const token = '2003087080:AAHycENSvEw7GQWyGBt3XWNtuFBFJHDc_js'
//—Å–æ–∑–¥–∞–ª–∏ –±–æ—Ç–∞
const bot = new TelegramApi(token, { polling: true })
//–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –±–æ—Ç–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º
bot.setMyCommands([
    { command: '/start', description: "start" },
    { command: '/weather', description: "weather" },
    { command: '/game1', description: "game on random number" },
    { command: '/send', description: "send" },
])


request.get(options, function (err, res, body) {
    state.weather.currentTemperature = JSON.parse(res.body).main.temp
    state.weather.weather = JSON.parse(res.body).weather[0].description
})
//–æ—Ç–ª–æ–∂–µ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞



//for game
const chats = {}


// bot.onText(/\/send/, msg => {
//     sendTime(1,msg,'—Ç–µ–∫—Å—Ç')
// })

const startGame = async (chatId) => {
    await bot.sendMessage(chatId, `–°–µ–π—á–∞—Å —è –∑–∞–≥–∞–¥–∞—é —Ü–∏—Ñ—Ä—É –æ—Ç 0 –¥–æ 9, –∞ —Ç—ã –¥–æ–ª–∂–µ–Ω –µ–µ —É–≥–∞–¥–∞—Ç—å!`);
    const randomNumber = Math.floor(Math.random() * 10)
    chats[chatId] = randomNumber;
    await bot.sendMessage(chatId, '–û—Ç–≥–∞–¥—ã–≤–∞–π', gameOptions);
}
//
const botAction = () => {
    bot.on('message', async (msg) => {
        const text = msg.text;
        const chatId = msg.chat.id
        try {
            if (text === '/start') {
                await bot.sendMessage(chatId, `–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è ${msg.from.first_name}! –Ø —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –ü–æ–∫–∞ –Ω–∞—Ö–æ–∂—É—Å—å –≤ –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏ –ø–æ—ç—Ç–æ–º—É –º–æ–≥—É —Ç—É–ø–∏—Ç—å)`)
                return bot.sendSticker(chatId, "https://tlgrm.ru/_/stickers/9ef/db1/9efdb148-747f-30f8-9575-7f6e06d34bac/7.webp")

            }
            if (text === '/weather') {
                await bot.sendMessage(chatId, `–°–µ–π—á–∞—Å  ${Math.round(state.weather.currentTemperature)} –≥—Ä–∞–¥—É—Å–æ–≤`)
                return bot.sendMessage(chatId, `${state.weather.weather} üåß`)
            }
            if (text === "/game1") {
                return startGame(chatId)
            }
            if (text === "/send") {
                return bot.onText(RegExp(text), msg => {
                    sendTime(0.1, msg, '–≠—Ç–æ—Ç —Ç–µ–∫—Å—Ç —Å—Ä–∞–±–æ—Ç–∞–ª —á–µ—Ä–µ–∑ 6 —Å–µ–∫—É–Ω–¥')
                })
            }




            return bot.sendMessage(chatId, "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —Ç–µ–±—è, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!")
        }
        catch {
            return bot.sendMessage(chatId, "–û–π! –ü—Ä–æ–∏–∑–æ—à–ª–∞ —Å–µ—Ä—å–µ–∑–Ω–∞—è –æ—à–∏–±–∫–∞!")
        }

    })

    //for game
    bot.on('callback_query', async msg => {
        const data = msg.data;
        const chatId = msg.message.chat.id;
        console.log("data is " + data + " chatsID " + chats[chatId])
        if (data === '/again') {
            return startGame(chatId)
        }
        if (data === '/stopgame') {
            return bot.sendMessage(chatId, "–ï—Å–ª–∏ –∑–∞—Ö–æ—Ç–∏—Ç–µ –µ—â–µ –ø–æ–∏–≥—Ä–∞—Ç—å, –æ–±—Ä–∞—â–∞–π—Å—Ç–µ—Å—å.")
        }
        if (data == chats[chatId]) {
            await bot.sendMessage(chatId, `–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –≤—ã —É–≥–∞–¥–∞–ª–∏ —Ü–∏—Ñ—Ä—É ${chats[chatId]}!!`, againOptions)
        } else {
            console.log(chats)
            await bot.sendMessage(chatId, `–í—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏!!, —è –∑–∞–≥–∞–¥–∞–ª —Ü–∏—Ñ—Ä—É ${chats[chatId]}, –≤–∞—à –æ—Ç–≤–µ—Ç ${data}`, againOptions)
        }

    })
}

botAction();
